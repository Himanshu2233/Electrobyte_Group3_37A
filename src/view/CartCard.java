/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import java.text.DecimalFormat;

/**
 *
 * @author Himu
 */
public class CartCard extends javax.swing.JPanel {

    /**
     * Creates new form CartCard
     */
    public CartCard(model.Product product) {
        this.product = product;
        initComponents();
        setProduct(product);

        // Listen for quantity changes
        quantity.addChangeListener(e -> {
            int newQty = (int) quantity.getValue();
            if (newQty < 1) {
                newQty = 1;
                quantity.setValue(1);
            }
            model.CartManager.updateQuantity(model.Session.currentUserId, product.getId(), newQty);
            product.setQuantity(newQty);

            // Update the price label for this card
            DecimalFormat df = new DecimalFormat("#,##0.00");
            double totalPrice = product.getPrice() * newQty;
            price.setText("Rs " + df.format(totalPrice));

            // Optionally, refresh total in parent cart window
            java.awt.Container parent = getParent();
            while (parent != null && !(parent instanceof view.Cart)) {
                parent = parent.getParent();
            }
            if (parent instanceof view.Cart cartWindow) {
                cartWindow.loadCartItems();
            }
        });
    }
    
    private model.Product product;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ID = new javax.swing.JLabel();
        image = new javax.swing.JLabel();
        name = new javax.swing.JLabel();
        quantity = new javax.swing.JSpinner();
        price = new javax.swing.JLabel();
        DeleteBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        ID.setText("ID");

        image.setBackground(new java.awt.Color(255, 255, 255));
        image.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        image.setText("image");

        name.setText("ProductName");

        price.setText("Price");

        DeleteBtn.setBackground(new java.awt.Color(255, 51, 51));
        DeleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        DeleteBtn.setText("Delete");
        DeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(ID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(image, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66)
                .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 131, Short.MAX_VALUE)
                .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(DeleteBtn)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ID)
                            .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DeleteBtn)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(image, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void setProduct(model.Product p) {
        this.product = p;

        name.setText(p.getName());

        // Format the total price (unit price * quantity)
        DecimalFormat df = new DecimalFormat("#,##0.00");
        double totalPrice = p.getPrice() * p.getQuantity();
        price.setText("Rs " + df.format(totalPrice));

        quantity.setValue(p.getQuantity());
        // Set image if available
        if (p.getImageUrl() != null && !p.getImageUrl().isEmpty()) {
            javax.swing.ImageIcon icon = new javax.swing.ImageIcon(p.getImageUrl());
            java.awt.Image img = icon.getImage().getScaledInstance(80, 80, java.awt.Image.SCALE_SMOOTH);
            image.setIcon(new javax.swing.ImageIcon(img));
            image.setText("");
        } else {
            image.setIcon(null);
            image.setText("No Image");
        }
    }

    private void DeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBtnActionPerformed
        int userId = model.Session.currentUserId;
        if (product != null) {
            model.CartManager.removeFromCart(userId, product.getId());
            // Refresh cart UI as before
            java.awt.Container parent = getParent();
            while (parent != null && !(parent instanceof view.Cart)) {
                parent = parent.getParent();
            }
            if (parent instanceof view.Cart cartWindow) {
                cartWindow.loadCartItems();
            }
        }
    }//GEN-LAST:event_DeleteBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeleteBtn;
    private javax.swing.JLabel ID;
    private javax.swing.JLabel image;
    private javax.swing.JLabel name;
    private javax.swing.JLabel price;
    private javax.swing.JSpinner quantity;
    // End of variables declaration//GEN-END:variables
}
